const fs = require("fs");
const path = __dirname + "/gali.json";

// Load or create gali list file
if (!fs.existsSync(path)) fs.writeFileSync(path, JSON.stringify([], null, 2));

function loadGaliList() {
  return JSON.parse(fs.readFileSync(path));
}

function saveGaliList(data) {
  fs.writeFileSync(path, JSON.stringify(data, null, 2));
}

module.exports.config = {
  name: "gali",
  version: "5.0.0",
  permission: 1, // Admin-only
  credits: "RiisHaD SoBuJ",
  description: "‡¶Æ‡¶ú‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶≤‡¶ø - ‡¶¨‡ßã‡¶Æ‡¶æ, ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶∏‡¶π",
  prefix: false,
  premium: false,
  category: "‡¶Æ‡¶ú‡¶æ",
  usages: "gali @mention | gali bomb @mention | gali add [‡¶ó‡¶æ‡¶≤‡¶ø]",
  cooldowns: 5
};

module.exports.run = async function ({ api, event, args, messageID, threadID, senderID, mentions }) {
  const threadInfo = await api.getThreadInfo(threadID);
  const isAdmin = threadInfo.adminIDs.some(admin => admin.id === senderID);
  if (!isAdmin) return api.sendMessage("‚ùå | ‡¶≠‡¶æ‡¶á, permission ‡¶®‡¶æ‡¶á! ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶ö‡¶æ‡¶≤‡¶æ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§", threadID, messageID);

  const allGalies = loadGaliList();

  const subcmd = args[0]?.toLowerCase();

  // ‚úÖ gali add
  if (subcmd === "add") {
    const newGali = args.slice(1).join(" ");
    if (!newGali) return api.sendMessage("‚ö†Ô∏è | ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶≤‡¶ø‡¶ñ‡ßã!", threadID, messageID);
    allGalies.push(newGali);
    saveGaliList(allGalies);
    return api.sendMessage(`‚úÖ | ‡¶®‡¶§‡ßÅ‡¶® ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá:\n"${newGali}"`, threadID, messageID);
  }

  // ‚úÖ gali bomb
  if (subcmd === "bomb") {
    const mentionedIDs = Object.keys(mentions);
    if (mentionedIDs.length === 0) return api.sendMessage("‚ö†Ô∏è | ‡¶Ü‡¶ó‡ßá ‡¶ï‡¶æ‡¶â‡¶ï‡ßá @mention ‡¶ï‡¶∞‡ßã!", threadID, messageID);

    const targetID = mentionedIDs[0];
    const targetTag = mentions[targetID];
    const total = 20; // Bomb count

    for (let i = 0; i < total; i++) {
      const gali = allGalies[Math.floor(Math.random() * allGalies.length)];
      await new Promise(r => setTimeout(r, 600)); // Delay
      await api.sendMessage({
        body: `üò° ‡¶ì‡¶á ${targetTag}, ${gali}`,
        mentions: [{ tag: targetTag, id: targetID }]
      }, threadID);
    }
    return;
  }

  // ‚úÖ gali @mention
  const mentionedIDs = Object.keys(mentions);
  if (mentionedIDs.length === 0) {
    return api.sendMessage("‚ö†Ô∏è | @mention ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá ‡¶Ø‡¶æ‡¶ï‡ßá ‡¶¨‡¶ï‡¶æ ‡¶¶‡¶ø‡¶¨‡¶ø!", threadID, messageID);
  }

  const targetID = mentionedIDs[0];
  const targetTag = mentions[targetID];

  const bokas = allGalies.length
    ? allGalies
    : [
        "‡¶§‡ßÅ‡¶á ‡¶ó‡¶æ‡¶ß‡¶æ ‡¶®‡ßü, ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶™! üê¥",
        "‡¶§‡ßã‡¶∞ ‡¶Æ‡¶ó‡¶ú‡ßá RAM ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶§‡ßÅ‡¶á hang ‡¶ï‡¶∞‡¶§‡ßá ‡¶®‡¶æ! üíª",
        "‡¶§‡ßÅ‡¶á ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ö‡¶≤‡¶®‡ßç‡¶§ error! üí•",
        "calculator ‡¶§‡ßã‡¶ï‡ßá ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßÅ‡¶≤‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡ßü ‡¶®‡¶æ! üòÇ",
        "debugger ‡¶§‡ßã‡¶ï‡ßá ‡¶¶‡ßá‡¶ñ‡¶≤‡ßá pause ‡¶Æ‡¶æ‡¶∞‡ßá! ‚è∏Ô∏è",
        "‡¶§‡ßÅ‡¶á ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶æ BUG, ‡¶Ø‡¶æ‡¶∞‡ßá fix ‡¶ï‡¶∞‡¶≤‡ßá system crash ‡¶ï‡¶∞‡ßá! üî•"
      ];

  for (const gali of bokas.slice(0, 10)) { // Just 10 normally
    await new Promise(r => setTimeout(r, 700));
    await api.sendMessage({
      body: `üò° ‡¶ì‡¶á ${targetTag}, ${gali}`,
      mentions: [{ tag: targetTag, id: targetID }]
    }, threadID);
  }
};
