const axios = require("axios");

module.exports.config = {
  name: "hug",
  version: "1.0.0",
  permission: 0,
  credits: "RiisHaD SoBuJ",
  description: "Send hug using canvas API (stream version)",
  prefix: false,
  category: "fun",
  usages: "hug @mention",
  cooldowns: 5,
  dependencies: {
    axios: ""
  }
};

module.exports.run = async function ({ api, event }) {
  const { threadID, messageID, senderID, mentions } = event;

  // ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶ø ‡¶ï‡ßá‡¶â ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶ï‡¶ø ‡¶®‡¶æ
  if (Object.keys(mentions).length === 0) {
    return api.sendMessage("‚ö†Ô∏è ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶ï‡¶æ‡¶â‡¶ï‡ßá @mention ‡¶ï‡¶∞‡ßá ‡¶π‡¶æ‡¶ó ‡¶™‡¶æ‡¶†‡¶æ‡¶ì!", threadID, messageID);
  }

  // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ID ‡¶®‡¶ø‡¶≤‡¶æ‡¶Æ
  const mentionID = Object.keys(mentions)[0];

  // ‡¶®‡¶æ‡¶Æ ‡¶†‡¶ø‡¶ï‡¶Æ‡¶§ ‡¶™‡ßá‡¶§‡ßá ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶õ‡¶ø
  let mentionName = mentions[mentionID];
  if (typeof mentionName !== "string") {
    mentionName = mentionName.replace("@", "") || "Friend";
  }

  // API ‡¶¨‡ßá‡¶∏ URL ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶õ‡¶ø
  if (!global.imranapi || !global.imranapi.canvas) {
    return api.sendMessage("‚ùå API ‡¶¨‡ßá‡¶∏ URL ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü ‡¶®‡¶ø‡•§ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßã‡•§", threadID, messageID);
  }

  // API ‡¶•‡ßá‡¶ï‡ßá ‡¶õ‡¶¨‡¶ø ‡¶≤‡ßã‡¶°‡ßá‡¶∞ URL
  const imgURL = `${global.imranapi.canvas}/hug?one=${senderID}&two=${mentionID}`;

  try {
    // API ‡¶•‡ßá‡¶ï‡ßá ‡¶õ‡¶¨‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶®‡¶ø‡ßü‡ßá ‡¶Ü‡¶∏‡¶õ‡¶ø
    const response = await axios.get(imgURL, { responseType: "stream" });

    // ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶è‡¶¨‡¶Ç ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡¶æ‡¶ö‡ßç‡¶õ‡¶ø
    return api.sendMessage({
      body: `ü§ó ${mentionName}, ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶π‡¶æ‡¶ó ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶≤‡ßã!`,
      attachment: response.data
    }, threadID, messageID);
  } catch (error) {
    console.error("Hug command error:", error);
    return api.sendMessage("‚ùå ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶π‡¶æ‡¶ó ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§ ‡¶™‡¶∞‡ßá ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã‡•§", threadID, messageID);
  }
};
